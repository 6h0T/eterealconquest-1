"use client"

import { useState, useEffect } from "react"
import { motion, AnimatePresence } from "framer-motion"
import { ChevronLeft, ChevronRight } from "lucide-react"
import type { Locale } from "@/i18n/config"

interface ServerInfoCarouselProps {
  lang: Locale
}

export default function ServerInfoCarousel({ lang }: ServerInfoCarouselProps) {
  const [currentIndex, setCurrentIndex] = useState(0)
  const [isAnimating, setIsAnimating] = useState(false)

  // Informaci√≥n del servidor traducida
  const getServerInfo = () => {
    if (lang === "es") {
      return [
        {
          title: "Informaci√≥n General",
          content: [
            "üéÆ Versi√≥n: Season 6 Episode 3",
            "‚ö° Experiencia: 9999x",
            "üí∞ Drop: 80%",
            "üèÜ Zen: 60%",
            "üî• M√°ximo Reset: 50",
            "‚≠ê M√°ximo Grand Reset: 20",
            "üéØ M√°ximo Nivel: 400",
            "üíé M√°ximo Stats: 32.767"
          ]
        },
        {
          title: "Sistema de Resets",
          content: [
            "üîÑ Reset disponible desde nivel 400",
            "üìà Cada reset otorga puntos adicionales",
            "üåü Grand Reset disponible tras 50 resets",
            "üí™ Bonificaciones especiales por Grand Reset",
            "üéÅ Recompensas exclusivas por milestone",
            "‚öîÔ∏è Acceso a contenido de alto nivel",
            "üèÖ T√≠tulos especiales por logros",
            "üîÆ Items √∫nicos por progresi√≥n"
          ]
        },
        {
          title: "Sistema PvP",
          content: [
            "‚öîÔ∏è PvP balanceado y competitivo",
            "üèüÔ∏è Eventos PvP regulares",
            "üèÜ Rankings y torneos",
            "üíÄ Sistema de duelos mejorado",
            "üõ°Ô∏è Anti-hack y anti-cheat activo",
            "üéØ Zonas PvP especializadas",
            "üëë Recompensas por victorias",
            "üî• Sistema de guilds avanzado"
          ]
        },
        {
          title: "Caracter√≠sticas Especiales",
          content: [
            "üé® Motor gr√°fico modernizado",
            "üîß Sistema de rareza de items",
            "üè∞ Dungeons exclusivos",
            "üé™ Eventos autom√°ticos",
            "üí≥ Sistema WCoins integrado",
            "üì± Panel web completo",
            "üîí Seguridad avanzada",
            "üåê Soporte multiidioma"
          ]
        },
        {
          title: "Econom√≠a del Servidor",
          content: [
            "üí∞ Econom√≠a balanceada y estable",
            "üè™ Sistema de comercio seguro",
            "üíé WCoins para items premium",
            "üéÅ Eventos con recompensas",
            "üìä Market din√°mico",
            "üîÑ Sistema de intercambio",
            "üí∏ Sin pay-to-win",
            "‚öñÔ∏è Precios equilibrados"
          ]
        }
      ]
    } else if (lang === "en") {
      return [
        {
          title: "General Information",
          content: [
            "üéÆ Version: Season 6 Episode 3",
            "‚ö° Experience: 9999x",
            "üí∞ Drop: 80%",
            "üèÜ Zen: 60%",
            "üî• Maximum Reset: 50",
            "‚≠ê Maximum Grand Reset: 20",
            "üéØ Maximum Level: 400",
            "üíé Maximum Stats: 32,767"
          ]
        },
        {
          title: "Reset System",
          content: [
            "üîÑ Reset available from level 400",
            "üìà Each reset grants additional points",
            "üåü Grand Reset available after 50 resets",
            "üí™ Special bonuses per Grand Reset",
            "üéÅ Exclusive milestone rewards",
            "‚öîÔ∏è Access to high-level content",
            "üèÖ Special titles for achievements",
            "üîÆ Unique items through progression"
          ]
        },
        {
          title: "PvP System",
          content: [
            "‚öîÔ∏è Balanced and competitive PvP",
            "üèüÔ∏è Regular PvP events",
            "üèÜ Rankings and tournaments",
            "üíÄ Enhanced duel system",
            "üõ°Ô∏è Active anti-hack and anti-cheat",
            "üéØ Specialized PvP zones",
            "üëë Victory rewards",
            "üî• Advanced guild system"
          ]
        },
        {
          title: "Special Features",
          content: [
            "üé® Modernized graphic engine",
            "üîß Item rarity system",
            "üè∞ Exclusive dungeons",
            "üé™ Automatic events",
            "üí≥ Integrated WCoins system",
            "üì± Complete web panel",
            "üîí Advanced security",
            "üåê Multi-language support"
          ]
        },
        {
          title: "Server Economy",
          content: [
            "üí∞ Balanced and stable economy",
            "üè™ Secure trading system",
            "üíé WCoins for premium items",
            "üéÅ Events with rewards",
            "üìä Dynamic market",
            "üîÑ Exchange system",
            "üí∏ No pay-to-win",
            "‚öñÔ∏è Balanced prices"
          ]
        }
      ]
    } else { // pt
      return [
        {
          title: "Informa√ß√µes Gerais",
          content: [
            "üéÆ Vers√£o: Season 6 Episode 3",
            "‚ö° Experi√™ncia: 9999x",
            "üí∞ Drop: 80%",
            "üèÜ Zen: 60%",
            "üî• Reset M√°ximo: 50",
            "‚≠ê Grand Reset M√°ximo: 20",
            "üéØ N√≠vel M√°ximo: 400",
            "üíé Stats M√°ximos: 32.767"
          ]
        },
        {
          title: "Sistema de Reset",
          content: [
            "üîÑ Reset dispon√≠vel a partir do n√≠vel 400",
            "üìà Cada reset concede pontos adicionais",
            "üåü Grand Reset dispon√≠vel ap√≥s 50 resets",
            "üí™ B√¥nus especiais por Grand Reset",
            "üéÅ Recompensas exclusivas por marco",
            "‚öîÔ∏è Acesso a conte√∫do de alto n√≠vel",
            "üèÖ T√≠tulos especiais por conquistas",
            "üîÆ Itens √∫nicos por progress√£o"
          ]
        },
        {
          title: "Sistema PvP",
          content: [
            "‚öîÔ∏è PvP balanceado e competitivo",
            "üèüÔ∏è Eventos PvP regulares",
            "üèÜ Rankings e torneios",
            "üíÄ Sistema de duelos aprimorado",
            "üõ°Ô∏è Anti-hack e anti-cheat ativo",
            "üéØ Zonas PvP especializadas",
            "üëë Recompensas por vit√≥rias",
            "üî• Sistema de guildas avan√ßado"
          ]
        },
        {
          title: "Caracter√≠sticas Especiais",
          content: [
            "üé® Motor gr√°fico modernizado",
            "üîß Sistema de raridade de itens",
            "üè∞ Dungeons exclusivas",
            "üé™ Eventos autom√°ticos",
            "üí≥ Sistema WCoins integrado",
            "üì± Painel web completo",
            "üîí Seguran√ßa avan√ßada",
            "üåê Suporte multi-idioma"
          ]
        },
        {
          title: "Economia do Servidor",
          content: [
            "üí∞ Economia balanceada e est√°vel",
            "üè™ Sistema de com√©rcio seguro",
            "üíé WCoins para itens premium",
            "üéÅ Eventos com recompensas",
            "üìä Mercado din√¢mico",
            "üîÑ Sistema de troca",
            "üí∏ Sem pay-to-win",
            "‚öñÔ∏è Pre√ßos equilibrados"
          ]
        }
      ]
    }
  }

  const serverInfo = getServerInfo()

  const nextSlide = () => {
    if (isAnimating) return
    setIsAnimating(true)
    setCurrentIndex((prev) => (prev + 1) % serverInfo.length)
    setTimeout(() => setIsAnimating(false), 500)
  }

  const prevSlide = () => {
    if (isAnimating) return
    setIsAnimating(true)
    setCurrentIndex((prev) => (prev - 1 + serverInfo.length) % serverInfo.length)
    setTimeout(() => setIsAnimating(false), 500)
  }

  // Auto-advance slides
  useEffect(() => {
    const interval = setInterval(() => {
      if (!isAnimating) {
        nextSlide()
      }
    }, 5000)

    return () => clearInterval(interval)
  }, [isAnimating])

  return (
    <div className="relative w-full max-w-4xl mx-auto">
      {/* Flechas de navegaci√≥n a los lados */}
      <button
        onClick={prevSlide}
        disabled={isAnimating}
        className="absolute left-0 top-1/2 transform -translate-y-1/2 z-20 p-3 bg-bunker-700/80 hover:bg-bunker-600/80 text-gold-400 rounded-full transition-colors disabled:opacity-50 -translate-x-4"
      >
        <ChevronLeft size={20} />
      </button>
      
      <button
        onClick={nextSlide}
        disabled={isAnimating}
        className="absolute right-0 top-1/2 transform -translate-y-1/2 z-20 p-3 bg-bunker-700/80 hover:bg-bunker-600/80 text-gold-400 rounded-full transition-colors disabled:opacity-50 translate-x-4"
      >
        <ChevronRight size={20} />
      </button>

      {/* Contenedor principal del carrusel */}
      <div className="relative bg-bunker-800/90 backdrop-blur-sm border border-gold-700/30 rounded-lg overflow-hidden min-h-[400px]">
        {/* Contenido */}
        <div className="p-4 md:p-8">
          <AnimatePresence mode="wait">
            <motion.div
              key={currentIndex}
              initial={{ opacity: 0, x: 50 }}
              animate={{ opacity: 1, x: 0 }}
              exit={{ opacity: 0, x: -50 }}
              transition={{ duration: 0.5, ease: "easeInOut" }}
              className="text-center"
            >
              <h3 className="text-xl md:text-2xl lg:text-3xl font-bold gold-gradient-text mb-6 md:mb-8">
                {serverInfo[currentIndex].title}
              </h3>
              
              <div className="grid grid-cols-1 md:grid-cols-2 gap-3 md:gap-4 max-w-3xl mx-auto">
                {serverInfo[currentIndex].content.map((item, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 20 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.3, delay: index * 0.1 }}
                    className="flex items-center text-left p-2 md:p-3 bg-bunker-700/50 rounded-lg border border-gold-700/20 hover:border-gold-700/40 transition-colors"
                  >
                    <span className="text-gold-100 text-xs md:text-sm lg:text-base font-medium">
                      {item}
                    </span>
                  </motion.div>
                ))}
              </div>
            </motion.div>
          </AnimatePresence>
        </div>
      </div>

      {/* Indicadores fuera del carrusel */}
      <div className="flex justify-center mt-4 gap-2">
        {serverInfo.map((_, index) => (
          <button
            key={index}
            onClick={() => {
              if (!isAnimating) {
                setIsAnimating(true)
                setCurrentIndex(index)
                setTimeout(() => setIsAnimating(false), 500)
              }
            }}
            className={`w-3 h-3 rounded-full transition-colors ${
              index === currentIndex ? "bg-gold-400" : "bg-bunker-600 hover:bg-bunker-500"
            }`}
          />
        ))}
      </div>
    </div>
  )
} 